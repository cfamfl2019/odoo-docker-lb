version: "3.7"

x-odoo-build: &odoo-build
  context: ./16.0
  dockerfile: Dockerfile

services:

  redis:
    container_name: redis
    image: library/redis:5.0-alpine
    restart: unless-stopped
    networks:
      - net1
    volumes:
      - redis_data:/data

  nginx:
    env_file: .env
    image: nginx:latest
    container_name: nginx
    restart: unless-stopped
    depends_on:
      - odoo1
      - odoo2
    ports:
      - ${TEST_DOCKER_PORT}:80
    volumes:
      - ./nginx/templates:/etc/nginx/templates
      - web_root:/var/www/html
    networks:
      - net1
      
  db:
    env_file: .env
    image: postgres:14
    container_name: db
    restart: unless-stopped
    ports:
      - "127.0.0.1:5444:5432"
    networks:
      - net1
    volumes:
      - db_home:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=odoo
      - POSTGRES_PASSWORD=odoo
      - POSTGRES_DB=odoo

  odoo1:
    container_name: odoo_replica1
    env_file: .env
    build: *odoo-build
    image: erpgap/odoo16
    restart: unless-stopped
    command: ["/startup.sh"]
    volumes:
      - odoo_home:/var/lib/odoo
      - odoo_extra:/mnt/extra-addons
      - ./16.0/odoo.conf:/etc/odoo/odoo.conf
    depends_on:
      - db
    networks:
      - net1

  odoo2:
    container_name: odoo_replica2
    env_file: .env
    build: *odoo-build
    image: erpgap/odoo16
    restart: unless-stopped
    command: ["/startup.sh"]
    volumes:
      - odoo_home:/var/lib/odoo
      - odoo_extra:/mnt/extra-addons
      - ./16.0/odoo.conf:/etc/odoo/odoo.conf
    depends_on:
      - db
    networks:
      - net1

  odoo_cron:
    container_name: odoo_cron
    command: ["odoo", "--no-http", "--max-cron-threads", "2"]
    env_file: .env
    build: *odoo-build
    image: odoogap/odoo16
    restart: unless-stopped
    volumes:
      - odoo_home:/var/lib/odoo
      - odoo_extra:/mnt/extra-addons
      - ./16.0/odoo.conf:/etc/odoo/odoo.conf
    depends_on:
      - db
    networks:
      - net1
      
  minio:
    container_name: minio
    env_file: .env
    image: minio/minio
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_storage:/data

    command: ["server", "--console-address", ":9001", "/data"]
    networks:
      - net1
  vsf:
    env_file: .env
    build:
      context: ./vsf
      dockerfile: Dockerfile
      args:
        TAG_BRANCH: "v1.5.1"
    container_name: vsf
    ports:
      - 3000:3000
    image: vsf2
    restart: unless-stopped
    volumes:
      - nuxt_build:/apt/.nuxt
    depends_on:
      - odoo
      - redis
    networks:
      - net1
      
volumes:
  db_home:
    external: false
  odoo_home:
    external: false
  odoo_extra:
    external: False
  web_root:
    external: false
  redis_data:
    external: false
  minio_storage: 
    external: false
  nuxt_build:
    external: false

networks:
  net1: 
    name: net1
